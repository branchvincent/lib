name: CD

on:
  release:
    types:
      - created
      - edited

permissions:
  contents: read

concurrency:
  group: ${{ github.event.release.tag_name }}
  cancel-in-progress: true

jobs:
  check:
    if: ${{ github.event.release.prerelease }}
    uses: ./.github/workflows/ci.yml

  strip:
    runs-on: ubuntu-latest
    outputs:
      v: ${{ steps.strip.outputs.v }}
    steps:
      - name: strip prerelease component
        run: echo "v=${V%%-rc}" >> $GITHUB_OUTPUT
        id: strip
        env:
          V: ${{ github.event.release.tag_name }}

  dnt:
    needs: [check, strip]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - [self-hosted, macOS, X64]
          - [self-hosted, linux, X64]
          - [self-hosted, macOS, ARM64]
          - [self-hosted, linux, ARM64]
          - ubuntu-latest  # ∵ resilience: PRs verify dnt with this env
    steps:
      - uses: actions/checkout@v3
      - uses: teaxyz/setup@v0
      - run: deno task dnt ${{ needs.strip.outputs.v }}

      - uses: actions/upload-artifact@v3
        if: ${{ matrix.os == 'ubuntu-latest' }}
        with:
          path: dist

  publish-npm:
    needs: [dnt]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3

      # if we don’t do this the npm publish step doesn’t work
      - uses: actions/setup-node@v2
        with:
          registry-url: https://registry.npmjs.org

      - run: npm publish --access public
        working-directory: artifact
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  publish:
    needs: [publish-npm, strip]
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Convert pre-release to release
        run: |
          curl -fX PATCH \
            -H "Authorization: Bearer ${{ github.token }}" \
            -H "Accept: application/vnd.github.v3+json" \
            -d '{"draft": false, "prerelease": false, "make_latest": true, "tag_name": "${{ needs.strip.outputs.v }}"}' \
            "https://api.github.com/repos/${{ github.repository }}/releases/${{ github.event.release.id }}"

      # delete pre-release tag
      - run: git push origin :${{ github.event.release.tag_name }}

      # we need the new tag for the next step
      - run: git fetch origin --tags

      - uses: fischerscode/tagger@v0
        with:
          prefix: v


